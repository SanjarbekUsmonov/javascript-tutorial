// funcsiya zamikayniya

// function arr(a){
//     return function(b){
//         return a + b
//     }
    
// }
// console.log(arr(1)(2));

// const add = function (a, b) {
//     if (b !== undefined)
//     return a + b
//     return (c)=> a+c
// }
// console.log(add(4, 5));
// console.log(add(5)(5));

// add (2,5) add = 7
// add  ((2)(5)) add = 7


// 1 var let const farqlari
// 2 data type
// 3 sinbil 
// 4 null va undifaind farqi
// 5 data taype guruxlari 
// 6 == va === farqi
// 7 && ,|| farqi 
// 8 use strict , this 
// 9 bind, aplay 
// 10 _proto_ , prototype
// 11 function type 
// 12 oblact vidimisti
// 13 function exespressin ishlatish tartibi 
// 14 storech turlari 
// 15 storech kattaliklar
// 16 js class
// 17 canstruktor
// 18 getter && sector
// 19 class potkotopom
// 20 opi nima? 
// 21 promis,
// 22 async, await
// 23 destrurizatsiya aobject,massiv
// 24 dizayn patter
// 25 modul 
// 26 debauns 
// 27 map , forEach, reduce, reduseright, some avery, event loop, 
// push,unshift, slice, splice, to string, to lovercase, to upercase
// 28 sprit operator
// 29 funksiya zamikayniya
// 30 sort
// 31 hosting
// 32  OBJECT tURLARI














// let car = ['Tesla', 'BMW', 'Mersezes Benz'];
// let fruit = ['Banana', 'Apple', 'Apelsin', 'Mandarin'];
// let plain = [...car, ...fruit];
// console.log(plain);

